<server description="Loyalty Level server">
    <featureManager>
        <feature>microProfile-1.2</feature> <!-- defines mpJwt-1.0, among others -->
        <feature>jndi-1.0</feature>
        <feature>jca-1.7</feature>
        <feature>jms-2.0</feature>
        <feature>appSecurity-2.0</feature>
<!--    <feature>ldapRegistry-3.0</feature> -->
<!--    <feature>wasJmsClient-2.0</feature> -->
        <feature>logstashCollector-1.0</feature>
    </featureManager>

    <logging traceSpecification="*=info" consoleLogLevel="INFO"/>

    <httpEndpoint httpPort="9080" httpsPort="9443" host="*" id="defaultHttpEndpoint"/>

    <keyStore id="defaultKeyStore" password="passw0rd" type="jks"
         location="${server.config.dir}/resources/security/key.jks" />

    <sslDefault sslRef="RpSSLConfig" />

    <ssl id="RpSSLConfig" keyStoreRef="defaultKeyStore" />

    <mpJwt id="myMpJwt" audiences="${env.JWT_AUDIENCE}" issuer="${env.JWT_ISSUER}" keyName="default" ignoreApplicationAuthMethod="false"/>

<!--
    <logstashCollector source="message,trace,ffdc,accessLog" hostName="logstash" port="5044"/>
-->

    <authData id="MQ-Credentials" user="${env.MQ_ID}" password="${env.MQ_PASSWORD}"></authData>

    <resourceAdapter id="mq" location="/config/wmq.jmsra.rar"/>

    <jmsQueueConnectionFactory id="NotificationQCF" jndiName="jms/Portfolio/NotificationQueueConnectionFactory" containerAuthDataRef="MQ-Credentials">
        <properties.mq 
            transportType="CLIENT"
            hostName="${env.MQ_HOST}" 
            port="${env.MQ_PORT}"
            channel="${env.MQ_CHANNEL}"
            queueManager="${env.MQ_QUEUE_MANAGER}"/>
    </jmsQueueConnectionFactory>
    <jmsQueue id="NotificationQ" jndiName="jms/Portfolio/NotificationQueue">
        <properties.mq baseQueueName="${env.MQ_QUEUE}" baseQueueManagerName="${env.MQ_QUEUE_MANAGER}"/>
    </jmsQueue>

<!-- Use this to be a client to Liberty's built-in JMS provider (running in a messaging-engine pod) instead of MQ
    <jmsQueueConnectionFactory id="NotificationQCF" jndiName="jms/Portfolio/NotificationQueueConnectionFactory">
        <properties.wasJms remoteServerAddress="messaging-engine-service:7276:BootstrapBasicMessaging"/>
    </jmsQueueConnectionFactory>
    <jmsQueue id="NotificationQ" jndiName="jms/Portfolio/NotificationQueue">
        <properties.wasJms queueName="NotificationQ"/>
    </jmsQueue>
-->

<!--
    <basicRegistry id="basic" realm="BasicRegistry">
    	<user name="admin" password="admin"/>
    	<user name="stock" password="trader"/>
        <user name="debug" password="debug"/>
    	<user name="read"  password="only"/>
    	<user name="other" password="other"/>
    	<group name="StockTrader">
    		<member name="stock"/>
    		<member name="debug"/>
    	</group>
    	<group name="StockViewer">
    		<member name="read"/>
    	</group>
    </basicRegistry>

    <administrator-role>
    	<user>admin</user>
    </administrator-role>
-->

    <!-- Define an LDAP configuration for BluePages.
    <ldapRegistry ldapType="IBM Tivoli Directory Server" host="bluepages.ibm.com" port="389" baseDN="o=ibm.com" realm="BluePages">
        <idsFilters userFilter="(&amp;(emailAddress=%v)(objectclass=person))"
            groupFilter="(&amp;(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))"/>
    </ldapRegistry> -->

    <ltpa expiration="1h"/> -->

    <webAppSecurity allowFailOverToBasicAuth="true" displayAuthenticationRealm="true" logoutOnHttpSessionExpire="true"
        webAlwaysLogin="true" preserveFullyQualifiedReferrerUrl="true" trackLoggedOutSSOCookies="true" ssoCookieName="StockTraderSSO"
        useOnlyCustomCookieName="true" ssoUseDomainFromURL="true"/>

    <webApplication id="LoyaltyLevel" name="LoyaltyLevel" location="LoyaltyLevel.war" contextRoot="/loyalty-level">
        <application-bnd>
            <security-role id="StockTrader" name="StockTrader">
                <special-subject type="ALL_AUTHENTICATED_USERS" id="IBMid"/>
            </security-role>
        </application-bnd>
    </webApplication>
</server>
